{"version":3,"sources":["assets/bg.jpg","assets/fonts/EBGaramond-Regular.ttf","assets/fonts/EBGaramond-Bold.ttf","Helpers/BossGenerator.js","Components/GenerateButton.js","Components/BossName.js","Components/Title.js","Components/Credits.js","App.js","index.js"],"names":["module","exports","BossGenerator","this","adjectives","data","names","titles","adjective","getRandomElement","name","title","Math","random","randomTitle","secondAdjective","array","floor","length","Container","styled","div","GenerateButton","onClick","props","React","Component","Name","BossName","handleClick","setState","boss","bossGenerator","generateBoss","doAnimation","resetAnimation","state","style","animation","onAnimationEnd","Title","Email","span","Credits","href","PureComponent","bg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"woGAAAA,EAAOC,QAAU,IAA0B,gC,2FCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,6C,0ICsC5BC,E,WAnCX,aAAe,oBACXC,KAAKC,WAAaC,EAAKD,WACvBD,KAAKG,MAAQD,EAAKC,MAClBH,KAAKI,OAASF,EAAKE,O,2DAInB,IAAMC,EAAYL,KAAKM,iBAAiBN,KAAKC,YACvCM,EAAOP,KAAKM,iBAAiBN,KAAKG,OACpCK,EAAQ,GAGZ,GAFqBC,KAAKC,SAAW,GAEnB,CACd,IAAMC,EAAcX,KAAKM,iBAAiBN,KAAKI,QAE3CO,IAAgBJ,IAChBC,EAAK,kBAAcG,IAI3B,IAEIC,EAAkB,GAKtB,OAP+BH,KAAKC,SAAW,KAI3CE,EAAe,WAAOZ,KAAKM,iBAAiBN,KAAKC,cAG/C,GAAN,OAAUI,GAAV,OAAsBO,EAAtB,YAAyCL,GAAzC,OAAgDC,K,uCAGnCK,GACb,OAAOA,EAAMJ,KAAKK,MAAML,KAAKC,SAAWG,EAAME,a,giBC/BtD,IAAMC,EAAYC,IAAOC,IAAV,KAwCAC,E,uKAVP,OACI,kBAACH,EAAD,CACII,QAASpB,KAAKqB,MAAMD,SAEnB,gB,GANYE,IAAMC,W,sfC1BnC,IAAMP,EAAYC,IAAOC,IAAV,KASTM,EAAOP,IAAOC,IAAV,KA4DKO,E,kDA/CX,aAAe,IAAD,8BACV,gBASJC,YAAc,WACV,EAAKC,SAAS,CACVC,KAAM,EAAKC,cAAcC,eACzBC,aAAa,KAbP,EAiBdC,eAAiB,WACb,EAAKL,SAAS,CACVI,aAAa,KAjBjB,EAAKF,cAAgB,IAAI9B,EAEzB,EAAKkC,MAAQ,CACTL,KAAM,EAAKC,cAAcC,eACzBC,aAAa,GANP,E,qDAuBJ,IAAD,OACL,OACI,kBAAC,EAAD,KACI,kBAACP,EAAD,CACIU,MACIlC,KAAKiC,MAAMF,YACP,CAAEI,UAAW,4BAEb,CAAEA,UAAW,QAErBC,eAAgB,kBAAM,EAAKJ,mBAE1BhC,KAAKiC,MAAML,MAGhB,kBAAC,EAAD,CACIR,QAAS,kBAAM,EAAKM,sB,GAxCjBJ,IAAMC,W,uSCxB7B,IAYec,EAZDpB,IAAOC,IAAV,K,0lBCCX,IAAMF,EAAYC,IAAOC,IAAV,KAuBToB,EAAQrB,IAAOsB,KAAV,KA0BIC,E,uKAnBP,OACI,kBAAC,EAAD,KACI,yDAEI,kBAACF,EAAD,+BAOJ,6BACI,uBAAGG,KAAK,yDAAR,qB,GAdEnB,IAAMoB,e,mQCvB5B,IAAM1B,EAAYC,IAAOC,IAAV,IAQWyB,KAeXC,MAZf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,uCAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,YCnBNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.39999564.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.3c8f8290.jpg\";","module.exports = __webpack_public_path__ + \"static/media/EBGaramond-Regular.d6989885.ttf\";","module.exports = __webpack_public_path__ + \"static/media/EBGaramond-Bold.22e30314.ttf\";","import data from '../assets/data.json'\r\n\r\nclass BossGenerator {\r\n    constructor() {\r\n        this.adjectives = data.adjectives;\r\n        this.names = data.names;\r\n        this.titles = data.titles;\r\n    }\r\n\r\n    generateBoss() {\r\n        const adjective = this.getRandomElement(this.adjectives);\r\n        const name = this.getRandomElement(this.names);\r\n        let title = \"\";\r\n        const isUsingTitle = Math.random() < 0.4;\r\n\r\n        if (isUsingTitle) {\r\n            const randomTitle = this.getRandomElement(this.titles);\r\n\r\n            if (randomTitle !== name) {\r\n                title = ` of the ${randomTitle}`;\r\n            }\r\n        }\r\n\r\n        const isUsingSecondAdjective = Math.random() < 0.2;\r\n\r\n        let secondAdjective = \"\";\r\n        if (isUsingSecondAdjective) {\r\n            secondAdjective = ` ${this.getRandomElement(this.adjectives)}`;\r\n        }\r\n\r\n        return `${adjective}${secondAdjective} ${name}${title}`;\r\n    }\r\n\r\n    getRandomElement(array) {\r\n        return array[Math.floor(Math.random() * array.length)];\r\n    }\r\n}\r\n\r\nexport default BossGenerator;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    font-size: calc(3vmin + 12px);\r\n    color: white;\r\n    font-family: EBGaramond;\r\n    user-select: none;\r\n    \r\n    \r\n    text-shadow: 0 0 2px rgba(0, 0, 0, 1);\r\n\r\n    padding: 4px 64px;\r\n    margin: 24px;\r\n\r\n    border-top: 2px solid #251d1b;\r\n    border-bottom: 2px solid #251d1b;\r\n\r\n    transition: all 0.1s ease;\r\n\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n        background-color: #4f1f0b;\r\n    }\r\n\r\n    &:active{\r\n        background-color: transparent;\r\n    }\r\n`;\r\n\r\nclass GenerateButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container\r\n                onClick={this.props.onClick}\r\n            >\r\n                {\"GENERATE\"}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GenerateButton;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BossGenerator from '../Helpers/BossGenerator'\r\nimport GenerateButton from './GenerateButton'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 16px;\r\n    \r\n`;\r\n\r\nconst Name = styled.div`\r\n    font-size: calc(5vmin + 14px);\r\n    text-align: center;\r\n    color: white;\r\n    font-family: EBGaramond;\r\n    user-select: none;\r\n    text-shadow: 0 0 2px rgba(0, 0, 0, 1);\r\n    margin: 15vh 0;\r\n    min-height: 100px;\r\n    \r\n`;\r\n\r\nclass BossName extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.bossGenerator = new BossGenerator();\r\n\r\n        this.state = {\r\n            boss: this.bossGenerator.generateBoss(),\r\n            doAnimation: false\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            boss: this.bossGenerator.generateBoss(),\r\n            doAnimation: true\r\n        })\r\n    }\r\n\r\n    resetAnimation = () => {\r\n        this.setState({\r\n            doAnimation: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Name\r\n                    style={\r\n                        this.state.doAnimation ?\r\n                            { animation: 'fade-in 0.4s ease 1 both' }\r\n                            :\r\n                            { animation: 'none' }\r\n                    }\r\n                    onAnimationEnd={() => this.resetAnimation()}\r\n                >\r\n                    {this.state.boss}\r\n                </Name>\r\n\r\n                <GenerateButton\r\n                    onClick={() => this.handleClick()}\r\n\r\n                />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BossName;","import styled from 'styled-components'\r\n\r\nconst Title = styled.div`\r\n    font-size: calc(5vmin + 12px);\r\n    color: white;\r\n    font-family: EBGaramond;\r\n    user-select: none;\r\n    margin-top: 32px;\r\n    text-align: center;\r\n    \r\n    text-shadow: 0 0 2px rgba(0, 0, 0, 1);\r\n`;\r\n\r\n\r\nexport default Title;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    bottom: 32px;\r\n    left: 32px;\r\n    font-size: 16px;\r\n    color: white;\r\n    font-family: EBGaramond;\r\n    \r\n    text-shadow: 0 0 2px rgba(0, 0, 0, 1);\r\n\r\n    transition: all 0.1s ease;\r\n\r\n    a{\r\n        &:link{\r\n            color: rgba(255, 255, 255, 0.87);\r\n        }\r\n\r\n        &:visited{\r\n            color: rgba(255, 255, 255, 0.87);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Email = styled.span`\r\n    color: rgba(255, 255, 255, 0.87);\r\n    text-decoration: underline;\r\n`;\r\n\r\nclass Credits extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <div>\r\n                    {`Send word suggestions to `}\r\n                    <Email>\r\n                        {`markofajler@gmail.com`}\r\n                    </Email>\r\n                </div>\r\n\r\n\r\n\r\n                <div>\r\n                    <a href=\"https://github.com/markof94/soulsborne-boss-generator\">{`Source code`}</a>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Credits;","import React from 'react'\r\nimport './App.css'\r\nimport BossName from './Components/BossName'\r\nimport styled from 'styled-components'\r\nimport bg from './assets/bg.jpg'\r\nimport Title from './Components/Title'\r\nimport Credits from './Components/Credits'\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-image: url(${bg});\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Title>\r\n        {`Soulsborne Boss Name Generator`}\r\n      </Title>\r\n      <BossName />\r\n      <Credits />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './assets/fonts/EBGaramond-Regular.ttf'\r\nimport './assets/fonts/EBGaramond-Bold.ttf'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}