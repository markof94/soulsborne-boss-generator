{"version":3,"sources":["assets/bg.jpg","assets/fonts/EBGaramond-Regular.ttf","assets/fonts/EBGaramond-Bold.ttf","Helpers/BossGenerator.js","Components/GenerateButton.js","Components/Checkbox.js","Components/BossName.js","Components/Title.js","Components/Credits.js","Components/ShareToolbar.js","Components/Footer.js","App.js","index.js"],"names":["module","exports","BossGenerator","this","adjectives","names","titles","adjectivesWeird","concat","namesWeird","titlesWeird","adjective","getRandomElement","name","title","Math","random","randomTitle","secondAdjective","array","floor","length","Container","styled","div","GenerateButton","onClick","props","React","Component","isChecked","CheckBoxContainer","Checkbox","Name","BossName","handleClick","bossName","state","isWeirdChecked","bossGenerator","generateWeirdBoss","generateBoss","localStorage","setItem","setState","boss","doAnimation","resetAnimation","toggleWeirdness","prevState","style","animation","onAnimationEnd","Title","Email","span","Credits","href","PureComponent","IconWrapper","generatedName","getItem","url","FacebookShareButton","quote","FacebookIcon","size","round","TwitterShareButton","via","hashtags","TwitterIcon","RedditShareButton","RedditIcon","TelegramShareButton","TelegramIcon","ShareToolbar","bg","App","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45d84606.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.3c8f8290.jpg\";","module.exports = __webpack_public_path__ + \"static/media/EBGaramond-Regular.d6989885.ttf\";","module.exports = __webpack_public_path__ + \"static/media/EBGaramond-Bold.22e30314.ttf\";","import adjectives from '../Data/adjectives.json'\r\nimport adjectivesWeird from '../Data/adjectivesWeird.json'\r\nimport names from '../Data/names.json'\r\nimport namesWeird from '../Data/namesWeird.json'\r\nimport titles from '../Data/titles.json'\r\nimport titlesWeird from '../Data/titlesWeird.json'\r\n\r\nclass BossGenerator {\r\n    constructor() {\r\n        this.adjectives = adjectives.adjectives;\r\n        this.names = names.names;\r\n        this.titles = titles.titles;\r\n        //Double concat to increase chances of getting one of the weird ones\r\n        this.adjectivesWeird = this.adjectives.concat(adjectivesWeird.adjectives).concat(adjectivesWeird.adjectives);\r\n        this.namesWeird = this.names.concat(namesWeird.adjectives).concat(namesWeird.names);\r\n        this.titlesWeird = this.titles.concat(titlesWeird.adjectives).concat(titlesWeird.titles);\r\n    }\r\n\r\n    generateBoss() {\r\n        const adjective = this.getRandomElement(this.adjectives);\r\n        const name = this.getRandomElement(this.names);\r\n        let title = \"\";\r\n        const isUsingTitle = Math.random() < 0.4;\r\n\r\n        if (isUsingTitle) {\r\n            const randomTitle = this.getRandomElement(this.titles);\r\n\r\n            if (randomTitle !== name) {\r\n                title = ` of the ${randomTitle}`;\r\n            }\r\n        }\r\n\r\n        const isUsingSecondAdjective = Math.random() < 0.2;\r\n\r\n        let secondAdjective = \"\";\r\n        if (isUsingSecondAdjective) {\r\n            secondAdjective = ` ${this.getRandomElement(this.adjectives)}`;\r\n        }\r\n\r\n        return `${adjective}${secondAdjective} ${name}${title}`;\r\n    }\r\n\r\n    generateWeirdBoss(){\r\n        const adjective = this.getRandomElement(this.adjectivesWeird);\r\n        const name = this.getRandomElement(this.namesWeird);\r\n        let title = \"\";\r\n        const isUsingTitle = Math.random() < 0.4;\r\n\r\n        if (isUsingTitle) {\r\n            const randomTitle = this.getRandomElement(this.titlesWeird);\r\n\r\n            if (randomTitle !== name) {\r\n                title = ` of the ${randomTitle}`;\r\n            }\r\n        }\r\n\r\n        const isUsingSecondAdjective = Math.random() < 0.2;\r\n\r\n        let secondAdjective = \"\";\r\n        if (isUsingSecondAdjective) {\r\n            secondAdjective = ` ${this.getRandomElement(this.adjectivesWeird)}`;\r\n        }\r\n\r\n        return `${adjective}${secondAdjective} ${name}${title}`;\r\n    }\r\n\r\n    getRandomElement(array) {\r\n        return array[Math.floor(Math.random() * array.length)];\r\n    }\r\n}\r\n\r\nexport default BossGenerator;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    font-size: calc(3vmin + 12px);\r\n    color: white;\r\n    font-family: EBGaramond;\r\n    user-select: none;\r\n\r\n    \r\n    text-shadow: 0 0 2px rgba(0, 0, 0, 1);\r\n\r\n    padding: 4px 64px;\r\n    margin: 0 24px;\r\n\r\n    border-top: 2px solid #251d1b;\r\n    border-bottom: 2px solid #251d1b;\r\n\r\n    -webkit-tap-highlight-color: transparent;\r\n\r\n    transition: all 0.1s ease;\r\n\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n        background-color: #4f1f0b;\r\n    }\r\n\r\n    &:active{\r\n        background-color: transparent;\r\n    }\r\n`;\r\n\r\nclass GenerateButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container\r\n                onClick={this.props.onClick}\r\n            >\r\n                {\"GENERATE\"}\r\n                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GenerateButton;","import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    font-size: calc(1.5vmin + 12px);\r\n    color: white;\r\n    font-family: EBGaramond;\r\n    user-select: none;\r\n    text-shadow: 0 0 4px rgba(0, 0, 0, 0.8);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    padding: 4px 12px;\r\n    \r\n    border-radius: 4px;\r\n\r\n    transition: all 0.2s ease;\r\n\r\n    -webkit-tap-highlight-color: transparent;\r\n\r\n    &:active{\r\n        transform: translate3d(0, 4px, 0);\r\n    }\r\n\r\n    ${props => props.isChecked && `\r\n        color: #bd1300;\r\n        font-weight: 600;\r\n    `}\r\n`;\r\n\r\nconst CheckBoxContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: 8px;\r\n\r\n    svg{\r\n        font-size: inherit;\r\n    }\r\n`;\r\n\r\nclass Checkbox extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container\r\n                onClick={this.props.onClick}\r\n                isChecked={this.props.isChecked}\r\n            >\r\n                {\"Chaos Mode (18+)\"}\r\n                <CheckBoxContainer>\r\n                    {\r\n                        this.props.isChecked ?\r\n                            <CheckBoxIcon />\r\n                            :\r\n                            <CheckBoxOutlineBlankIcon />\r\n                    }\r\n                </CheckBoxContainer>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BossGenerator from '../Helpers/BossGenerator'\r\nimport GenerateButton from './GenerateButton'\r\nimport Checkbox from './Checkbox'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 16px;\r\n\r\n    \r\n`;\r\n\r\nconst Name = styled.div`\r\n    font-size: calc(5vmin + 14px);\r\n    text-align: center;\r\n    color: white;\r\n    font-family: EBGaramond;\r\n    user-select: none;\r\n    text-shadow: 0 0 2px rgba(0, 0, 0, 1);\r\n    margin:128px 0;\r\n    min-height: 100px;\r\n    \r\n    \r\n`;\r\n\r\nclass BossName extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.bossGenerator = new BossGenerator();\r\n\r\n        const bossName = this.bossGenerator.generateBoss();\r\n        localStorage.setItem('generatedName', bossName);\r\n\r\n        this.state = {\r\n            boss: bossName,\r\n            doAnimation: false,\r\n            isWeirdChecked: false\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        const bossName = this.state.isWeirdChecked ? this.bossGenerator.generateWeirdBoss() : this.bossGenerator.generateBoss();\r\n\r\n        localStorage.setItem('generatedName', bossName);\r\n\r\n        this.setState({\r\n            boss: bossName,\r\n            doAnimation: true\r\n        })\r\n    }\r\n\r\n    resetAnimation = () => {\r\n        this.setState({\r\n            doAnimation: false\r\n        })\r\n    }\r\n\r\n    toggleWeirdness = () => {\r\n        this.setState(prevState => ({\r\n            isWeirdChecked: !prevState.isWeirdChecked\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Name\r\n                    style={\r\n                        this.state.doAnimation ?\r\n                            { animation: 'fade-in 0.4s ease 1 both' }\r\n                            :\r\n                            { animation: 'none' }\r\n                    }\r\n                    onAnimationEnd={() => this.resetAnimation()}\r\n                >\r\n                    {this.state.boss}\r\n                </Name>\r\n\r\n                <GenerateButton\r\n                    onClick={() => this.handleClick()}\r\n\r\n                />\r\n                <Checkbox\r\n                    onClick={this.toggleWeirdness}\r\n                    isChecked={this.state.isWeirdChecked}\r\n                />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BossName;","import styled from 'styled-components'\r\n\r\nconst Title = styled.div`\r\n    font-size: calc(3vmin + 12px);\r\n    color: white;\r\n    font-family: EBGaramond;\r\n    user-select: none;\r\n    margin-top: 32px;\r\n    text-align: center;\r\n    \r\n    text-shadow: 0 0 2px rgba(0, 0, 0, 1);\r\n`;\r\n\r\n\r\nexport default Title;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    \r\n    font-size: 16px;\r\n    color: white;\r\n    font-family: EBGaramond;\r\n    \r\n    text-shadow: 0 0 2px rgba(0, 0, 0, 1);\r\n    margin-top: 32px;\r\n\r\n    transition: all 0.1s ease;\r\n\r\n    a{\r\n        &:link{\r\n            color: rgba(255, 255, 255, 0.87);\r\n        }\r\n\r\n        &:visited{\r\n            color: rgba(255, 255, 255, 0.87);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Email = styled.span`\r\n    color: rgba(255, 255, 255, 0.87);\r\n    text-decoration: underline;\r\n`;\r\n\r\nclass Credits extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <div>\r\n                    {`Send word suggestions to `}\r\n                    <Email>\r\n                        {`markofajler@gmail.com`}\r\n                    </Email>\r\n                </div>\r\n\r\n\r\n\r\n                <div>\r\n                    <a href=\"https://github.com/markof94/soulsborne-boss-generator\">{`Source code`}</a>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Credits;","\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n    FacebookShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TwitterShareButton,\r\n} from \"react-share\";\r\n\r\nimport {\r\n    FacebookIcon,\r\n    TelegramIcon,\r\n    RedditIcon,\r\n    TwitterIcon\r\n} from \"react-share\";\r\n\r\nconst Container = styled.div`\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n   margin-top: 32px;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n        margin: 0 6px;\r\n`;\r\n\r\nclass Checkbox extends React.Component {\r\n    render() {\r\n        const iconSize = 48;\r\n\r\n        const generatedName = localStorage.getItem(\"generatedName\");\r\n        const url = \"https://markof94.github.io/soulsborne-boss-generator/\";\r\n\r\n        return (\r\n            <Container>\r\n                <IconWrapper>\r\n                    <FacebookShareButton\r\n                        url={url}\r\n                        quote={generatedName}\r\n                    >\r\n                        <FacebookIcon\r\n                            size={iconSize}\r\n                            round={true}\r\n                        />\r\n                    </FacebookShareButton>\r\n                </IconWrapper>\r\n                <IconWrapper>\r\n                    <TwitterShareButton\r\n                        url={url}\r\n                        title={generatedName}\r\n                        via={\"Soulsborne Boss Generator\"}\r\n                        hashtags={[\"darksouls\", \"boss\", \"soulsborne\"]}\r\n                    >\r\n                        <TwitterIcon\r\n                            size={iconSize}\r\n                            round={true}\r\n                        />\r\n                    </TwitterShareButton>\r\n                </IconWrapper>\r\n                <IconWrapper>\r\n                    <RedditShareButton>\r\n                        <RedditIcon\r\n                            size={iconSize}\r\n                            round={true}\r\n                        />\r\n                    </RedditShareButton>\r\n                </IconWrapper>\r\n                <IconWrapper>\r\n                    <TelegramShareButton>\r\n                        <TelegramIcon\r\n                            size={iconSize}\r\n                            round={true}\r\n                        />\r\n                    </TelegramShareButton>\r\n                </IconWrapper>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkbox;","\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport Credits from './Credits'\r\nimport ShareToolbar from './ShareToolbar'\r\n\r\nconst Container = styled.div`\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n   width: 100%;\r\n   margin-top: 32px;\r\n   \r\n`;\r\n\r\nclass Checkbox extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <ShareToolbar />\r\n                <Credits />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React from 'react'\r\nimport './App.css'\r\nimport BossName from './Components/BossName'\r\nimport styled from 'styled-components'\r\nimport bg from './assets/bg.jpg'\r\nimport Title from './Components/Title'\r\nimport Footer from './Components/Footer'\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-image: url(${bg});\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Title>\r\n        {`Soulsborne Boss Name Generator`}\r\n      </Title>\r\n      <BossName />\r\n      <Footer />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './assets/fonts/EBGaramond-Regular.ttf'\r\nimport './assets/fonts/EBGaramond-Bold.ttf'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}